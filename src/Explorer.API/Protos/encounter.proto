
syntax = "proto3";

option csharp_namespace = "GrpcServiceTranscoding";
import "Protos/google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
service Encounter {
  rpc Create(CreateRequest) returns (EncounterDto){
      option (google.api.http) ={
          post: "/api/administration/encounter"
          body: "*"
      };
  }
  rpc Update(UpdateRequest) returns (EncounterDto){
      option (google.api.http)={
          put: "/api/administration/encounter"
          body: "*"
      };
  }
  rpc Delete(EncounterId) returns (google.protobuf.Empty){
      option (google.api.http)={
          delete: "/api/administration/encounter/{id}"
      };
  }
  rpc GetById(EncounterId) returns (EncounterDto){
      option (google.api.http)={
          get: "/api/administration/encounter/{id}"
      };
  }

  rpc CreateEncounterExecution(EncounterExecutionDto) returns (EncounterExecutionDto){
      option (google.api.http) ={
          post: "/api/tourist/encounter-execution"
          body: "*"
      };
  }
  rpc GetEncounterById(EncounterId) returns (EncounterDto){
      option (google.api.http)={
          get: "/api/tourist/encounter-execution/{id}"
      };
  }
  rpc UpdateEncounterExecution(EncounterExecutionDto) returns (EncounterExecutionDto){
      option (google.api.http)={
          put: "/api/tourist/encounter-execution"
          body: "*"
      };
  }
  rpc ActivateEncounterExecution(ActivateRequest) returns (EncounterExecutionDto){
      option (google.api.http)={
          put: "/api/tourist/encounter-execution/activate/{id}"
          body: "*"
      };
  }
  rpc CompleteExecution(ActivateRequest) returns(EncounterExecutionDto){
      option (google.api.http)={
          put: "/api/tourist/encounter-execution/completed/{id}"
          body: "*"
      };
  }
  rpc DeleteExecution(EncounterId) returns (google.protobuf.Empty){
      option (google.api.http)={
          delete: "/api/tourist/encounter-execution/{id}"
      };
  }
  rpc GetAllExecutionsByTourist(EncounterId) returns (PagedExecutions){
      option (google.api.http)={
          get: "/api/tourist/encounter-execution/getAllByTourist/{id}"
      };
  }
  rpc GetAllCompletedExecutionsByTourist(PagedRequestWithId) returns (PagedExecutions){
      option (google.api.http)={
          get: "/api/tourist/encounter-execution/get-all-completed/{id}"
      };
  }
}
message PagedRequestWithId{
    int32 id = 1;
    int32 page = 2;
    int32 pageSize = 3;
}

message PagedExecutions{
    repeated EncounterExecutionDto results = 1;
    int32 totalCount = 2;
}

message ActivateRequest{
    int32 id = 1;
    double touristLatitude = 2;
    double touristLongitude = 3;
}

message EncounterId{
    int32 id = 1;
}

message UpdateRequest{
    EncounterDto encounter = 1;
    repeated bytes image_f = 2;
}

message CreateRequest {
  EncounterDto encounter = 1;
  string checkpoint_id = 2;
  bool is_secret_prerequisite = 3;
  repeated bytes image_f = 4;
}

message EncounterExecutionDto{
    int64 id = 1;
    int64 encounterId = 2;
    EncounterDto encounterDto = 3;
    int64 touristId = 4;
    string status = 5;
    google.protobuf.Timestamp startTime = 6;
}

message EncounterDto{
    int64 authorId = 1;
    int32 id = 2;
    string name =3;
    string description = 4;
    int32 xP = 5;
    string status = 6;
    string type = 7;
    double longitude = 8;
    double latitude = 9;
    double locationLongitude = 10;
    double locationLatitude = 11;
    string image =12;
    double range = 13;
    int32 requiredPeople = 14;
    repeated int32 activeTouristsIds = 15;
}
